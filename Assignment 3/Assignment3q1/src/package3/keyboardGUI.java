/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package package3;
import java.awt.Color;
/**
 *
 * @author Jefferson
 */
public class keyboardGUI extends javax.swing.JFrame {

    /**
     * Creates new form keyboardGUI
     */
    public keyboardGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        keyTilde = new javax.swing.JButton();
        key1 = new javax.swing.JButton();
        key2 = new javax.swing.JButton();
        key3 = new javax.swing.JButton();
        key4 = new javax.swing.JButton();
        key5 = new javax.swing.JButton();
        key6 = new javax.swing.JButton();
        key7 = new javax.swing.JButton();
        key8 = new javax.swing.JButton();
        key9 = new javax.swing.JButton();
        key0 = new javax.swing.JButton();
        keyMinus = new javax.swing.JButton();
        keyEqual = new javax.swing.JButton();
        keyBack = new javax.swing.JButton();
        keyTab = new javax.swing.JButton();
        keyQ = new javax.swing.JButton();
        keyW = new javax.swing.JButton();
        keyE = new javax.swing.JButton();
        keyR = new javax.swing.JButton();
        keyT = new javax.swing.JButton();
        keyY = new javax.swing.JButton();
        keyU = new javax.swing.JButton();
        keyI = new javax.swing.JButton();
        keyO = new javax.swing.JButton();
        keyP = new javax.swing.JButton();
        keyLeftBracket = new javax.swing.JButton();
        keyRightBracket = new javax.swing.JButton();
        keyBackSlash = new javax.swing.JButton();
        keyCaps = new javax.swing.JButton();
        keyA = new javax.swing.JButton();
        keyS = new javax.swing.JButton();
        keyD = new javax.swing.JButton();
        keyF = new javax.swing.JButton();
        keyG = new javax.swing.JButton();
        keyH = new javax.swing.JButton();
        keyJ = new javax.swing.JButton();
        keyK = new javax.swing.JButton();
        keyL = new javax.swing.JButton();
        keyColon = new javax.swing.JButton();
        keyDoubleQuote = new javax.swing.JButton();
        keyEnter = new javax.swing.JButton();
        keyLeftShift = new javax.swing.JButton();
        keyZ = new javax.swing.JButton();
        keyX = new javax.swing.JButton();
        keyC = new javax.swing.JButton();
        keyV = new javax.swing.JButton();
        keyB = new javax.swing.JButton();
        keyN = new javax.swing.JButton();
        keyM = new javax.swing.JButton();
        keyComma = new javax.swing.JButton();
        keyPeriod = new javax.swing.JButton();
        keyQuestion = new javax.swing.JButton();
        keyRightShift = new javax.swing.JButton();
        keySpace = new javax.swing.JButton();
        keyUp = new javax.swing.JButton();
        keyLeft = new javax.swing.JButton();
        keyRight = new javax.swing.JButton();
        keyDown = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputField = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(738, 360));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        keyTilde.setText("~");
        getContentPane().add(keyTilde, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        key1.setText("1");
        getContentPane().add(key1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, -1, -1));

        key2.setText("2");
        getContentPane().add(key2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, -1, -1));

        key3.setText("3");
        getContentPane().add(key3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, -1, -1));

        key4.setText("4");
        getContentPane().add(key4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 130, -1, -1));

        key5.setText("5");
        getContentPane().add(key5, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, -1, -1));

        key6.setText("6");
        getContentPane().add(key6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, -1, -1));

        key7.setText("7");
        getContentPane().add(key7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, -1, -1));

        key8.setText("8");
        getContentPane().add(key8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, -1, -1));

        key9.setText("9");
        getContentPane().add(key9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, -1, -1));

        key0.setText("0");
        getContentPane().add(key0, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, -1, -1));

        keyMinus.setText("-");
        getContentPane().add(keyMinus, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 130, -1, -1));

        keyEqual.setText("+");
        getContentPane().add(keyEqual, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 130, -1, -1));

        keyBack.setText("<--");
        getContentPane().add(keyBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 130, -1, -1));

        keyTab.setText("TAB");
        getContentPane().add(keyTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        keyQ.setText("Q");
        getContentPane().add(keyQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        keyW.setText("W");
        getContentPane().add(keyW, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, -1, -1));

        keyE.setText("E");
        getContentPane().add(keyE, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, -1, -1));

        keyR.setText("R");
        getContentPane().add(keyR, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, -1, -1));

        keyT.setText("T");
        getContentPane().add(keyT, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, -1));

        keyY.setText("Y");
        getContentPane().add(keyY, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, -1, -1));

        keyU.setText("U");
        getContentPane().add(keyU, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, -1, -1));

        keyI.setText("I");
        getContentPane().add(keyI, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));

        keyO.setText("O");
        getContentPane().add(keyO, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, -1, -1));

        keyP.setText("P");
        getContentPane().add(keyP, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, -1, -1));

        keyLeftBracket.setText("[");
        getContentPane().add(keyLeftBracket, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, -1, -1));

        keyRightBracket.setText("]");
        getContentPane().add(keyRightBracket, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 160, -1, -1));

        keyBackSlash.setText("\\");
            getContentPane().add(keyBackSlash, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 160, -1, -1));

            keyCaps.setText("CAPS");
            getContentPane().add(keyCaps, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

            keyA.setText("A");
            getContentPane().add(keyA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, -1));

            keyS.setText("S");
            getContentPane().add(keyS, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, -1));

            keyD.setText("D");
            getContentPane().add(keyD, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, -1, -1));

            keyF.setText("F");
            getContentPane().add(keyF, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, -1, -1));

            keyG.setText("G");
            getContentPane().add(keyG, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, -1, -1));

            keyH.setText("H");
            getContentPane().add(keyH, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, -1, -1));

            keyJ.setText("J");
            getContentPane().add(keyJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, -1, -1));

            keyK.setText("K");
            getContentPane().add(keyK, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, -1, -1));

            keyL.setText("L");
            getContentPane().add(keyL, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 190, -1, -1));

            keyColon.setText(":");
            getContentPane().add(keyColon, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 190, -1, -1));

            keyDoubleQuote.setText("\"");
            getContentPane().add(keyDoubleQuote, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, -1, -1));

            keyEnter.setText("ENTER");
            getContentPane().add(keyEnter, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 190, 80, -1));

            keyLeftShift.setText("SHIFT");
            getContentPane().add(keyLeftShift, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 80, -1));

            keyZ.setText("Z");
            getContentPane().add(keyZ, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

            keyX.setText("X");
            getContentPane().add(keyX, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, -1, -1));

            keyC.setText("C");
            getContentPane().add(keyC, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, -1, -1));

            keyV.setText("V");
            getContentPane().add(keyV, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, -1, -1));

            keyB.setText("B");
            getContentPane().add(keyB, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, -1, -1));

            keyN.setText("N");
            getContentPane().add(keyN, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, -1, -1));

            keyM.setText("M");
            getContentPane().add(keyM, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, -1, -1));

            keyComma.setText(",");
            getContentPane().add(keyComma, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, -1, -1));

            keyPeriod.setText(".");
            getContentPane().add(keyPeriod, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 220, -1, -1));

            keyQuestion.setText("?");
            getContentPane().add(keyQuestion, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 220, -1, -1));

            keyRightShift.setText("SHIFT");
            getContentPane().add(keyRightShift, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, 110, -1));
            getContentPane().add(keySpace, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 260, 30));

            keyUp.setText("^");
            getContentPane().add(keyUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, -1, -1));

            keyLeft.setText("<");
            getContentPane().add(keyLeft, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 280, -1, -1));

            keyRight.setText(">");
            getContentPane().add(keyRight, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 280, -1, -1));

            keyDown.setText("v");
            getContentPane().add(keyDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 280, -1, -1));

            inputField.setColumns(20);
            inputField.setRows(5);
            inputField.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    inputFieldKeyPressed(evt);
                }
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    inputFieldKeyReleased(evt);
                }
            });
            jScrollPane1.setViewportView(inputField);

            getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 700, 110));

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void inputFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFieldKeyPressed
        switch(evt.getKeyCode()){                       // Switch statements using cases for each key pressed, case are based on the keycodes
            case 192:                                   
                keyTilde.setBackground(Color.green);    // Key background becomes green when pressed
                break;
            case 49:
                key1.setBackground(Color.green);
                break;
            case 50:
                key2.setBackground(Color.green);
                break;
            case 51:
                key3.setBackground(Color.green);
                break;
            case 52:
                key4.setBackground(Color.green);
                break;
            case 53:
                key5.setBackground(Color.green);
                break;
            case 54:
                key6.setBackground(Color.green);
                break;
            case 55:
                key7.setBackground(Color.green);
                break;
            case 56:
                key8.setBackground(Color.green);
                break;
            case 57:
                key9.setBackground(Color.green);
                break;
            case 48:
                key0.setBackground(Color.green);
                break;
            case 45:
                keyMinus.setBackground(Color.green);
                break;
            case 61:
                keyEqual.setBackground(Color.green);
                break;
            case 8:
                keyBack.setBackground(Color.green);
                break;    
            case 9:
                keyTab.setBackground(Color.green);
                break;
            case 81:
                keyQ.setBackground(Color.green);
                break;
            case 87:
                keyW.setBackground(Color.green);
                break;
            case 69:
                keyE.setBackground(Color.green);
                break;
            case 82:
                keyR.setBackground(Color.green);
                break;
            case 84:
                keyT.setBackground(Color.green);
                break;
            case 89:
                keyY.setBackground(Color.green);
                break;
            case 85:
                keyU.setBackground(Color.green);
                break;
            case 73:
                keyI.setBackground(Color.green);
                break;
            case 79:
                keyO.setBackground(Color.green);
                break;
            case 80:
                keyP.setBackground(Color.green);
                break;
            case 91:
                keyLeftBracket.setBackground(Color.green);
                break;
            case 93:
                keyRightBracket.setBackground(Color.green);
                break;
            case 92:
                keyBackSlash.setBackground(Color.green);
                break;
            case 20:
                keyCaps.setBackground(Color.green);
                break;
            case 65:
                keyA.setBackground(Color.green);
                break;
            case 83:
                keyS.setBackground(Color.green);
                break;
            case 68:
                keyD.setBackground(Color.green);
                break;
            case 70:
                keyF.setBackground(Color.green);
                break;
            case 71:
                keyG.setBackground(Color.green);
                break;
            case 72:
                keyH.setBackground(Color.green);
                break;
            case 74:
                keyJ.setBackground(Color.green);
                break;
            case 75:
                keyK.setBackground(Color.green);
                break;
            case 76:
                keyL.setBackground(Color.green);
                break;
            case 59:
                keyColon.setBackground(Color.green);
                break;
            case 222:
                keyDoubleQuote.setBackground(Color.green);
                break;
            case 10:
                keyEnter.setBackground(Color.green);
                break;
            case 16:
                keyLeftShift.setBackground(Color.green);
                keyRightShift.setBackground(Color.green);
                break;    
            case 90:
                keyZ.setBackground(Color.green);
                break;
            case 88:
                keyX.setBackground(Color.green);
                break;
            case 67:
                keyC.setBackground(Color.green);
                break;
            case 86:
                keyV.setBackground(Color.green);
                break;
            case 66:
                keyB.setBackground(Color.green);
                break;
            case 78:
                keyN.setBackground(Color.green);
                break;
            case 77:
                keyM.setBackground(Color.green);
                break;
            case 44:
                keyComma.setBackground(Color.green);
                break;
            case 46:
                keyPeriod.setBackground(Color.green);
                break;
            case 47:
                keyQuestion.setBackground(Color.green);
                break;
            case 32:
                keySpace.setBackground(Color.green);
                break;
            case 38:
                keyUp.setBackground(Color.green);
                break;
            case 40:
                keyDown.setBackground(Color.green);
                break;    
            case 37:
                keyLeft.setBackground(Color.green);
                break;
            case 39:
                keyRight.setBackground(Color.green);
                break;
        }      
    }//GEN-LAST:event_inputFieldKeyPressed

    private void inputFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFieldKeyReleased
        switch(evt.getKeyCode()){                           // Switch statements using cases for each key released, case are based on the keycodes
            case 192:
                keyTilde.setBackground(Color.lightGray);    // Key background reverts to default color when key is released 
                break;
            case 49:
                key1.setBackground(Color.lightGray);
                break;
            case 50:
                key2.setBackground(Color.lightGray);
                break;
            case 51:
                key3.setBackground(Color.lightGray);
                break;
            case 52:
                key4.setBackground(Color.lightGray);
                break;
            case 53:
                key5.setBackground(Color.lightGray);
                break;
            case 54:
                key6.setBackground(Color.lightGray);
                break;
            case 55:
                key7.setBackground(Color.lightGray);
                break;
            case 56:
                key8.setBackground(Color.lightGray);
                break;
            case 57:
                key9.setBackground(Color.lightGray);
                break;
            case 48:
                key0.setBackground(Color.lightGray);
                break;
            case 45:
                keyMinus.setBackground(Color.lightGray);
                break;
            case 61:
                keyEqual.setBackground(Color.lightGray);
                break;
            case 8:
                keyBack.setBackground(Color.lightGray);
                break;    
            case 9:
                keyTab.setBackground(Color.lightGray);
                break;
            case 81:
                keyQ.setBackground(Color.lightGray);
                break;
            case 87:
                keyW.setBackground(Color.lightGray);
                break;
            case 69:
                keyE.setBackground(Color.lightGray);
                break;
            case 82:
                keyR.setBackground(Color.lightGray);
                break;
            case 84:
                keyT.setBackground(Color.lightGray);
                break;
            case 89:
                keyY.setBackground(Color.lightGray);
                break;
            case 85:
                keyU.setBackground(Color.lightGray);
                break;
            case 73:
                keyI.setBackground(Color.lightGray);
                break;
            case 79:
                keyO.setBackground(Color.lightGray);
                break;
            case 80:
                keyP.setBackground(Color.lightGray);
                break;
            case 91:
                keyLeftBracket.setBackground(Color.lightGray);
                break;
            case 93:
                keyRightBracket.setBackground(Color.lightGray);
                break;
            case 92:
                keyBackSlash.setBackground(Color.lightGray);
                break;
            case 20:
                keyCaps.setBackground(Color.lightGray);
                break;
            case 65:
                keyA.setBackground(Color.lightGray);
                break;
            case 83:
                keyS.setBackground(Color.lightGray);
                break;
            case 68:
                keyD.setBackground(Color.lightGray);
                break;
            case 70:
                keyF.setBackground(Color.lightGray);
                break;
            case 71:
                keyG.setBackground(Color.lightGray);
                break;
            case 72:
                keyH.setBackground(Color.lightGray);
                break;
            case 74:
                keyJ.setBackground(Color.lightGray);
                break;
            case 75:
                keyK.setBackground(Color.lightGray);
                break;
            case 76:
                keyL.setBackground(Color.lightGray);
                break;
            case 59:
                keyColon.setBackground(Color.lightGray);
                break;
            case 222:
                keyDoubleQuote.setBackground(Color.lightGray);
                break;
            case 10:
                keyEnter.setBackground(Color.lightGray);
                break;
            case 16:
                keyLeftShift.setBackground(Color.lightGray);
                keyRightShift.setBackground(Color.lightGray);
                break;    
            case 90:
                keyZ.setBackground(Color.lightGray);
                break;
            case 88:
                keyX.setBackground(Color.lightGray);
                break;
            case 67:
                keyC.setBackground(Color.lightGray);
                break;
            case 86:
                keyV.setBackground(Color.lightGray);
                break;
            case 66:
                keyB.setBackground(Color.lightGray);
                break;
            case 78:
                keyN.setBackground(Color.lightGray);
                break;
            case 77:
                keyM.setBackground(Color.lightGray);
                break;
            case 44:
                keyComma.setBackground(Color.lightGray);
                break;
            case 46:
                keyPeriod.setBackground(Color.lightGray);
                break;
            case 47:
                keyQuestion.setBackground(Color.lightGray);
                break;
            case 32:
                keySpace.setBackground(Color.lightGray);
                break;
            case 38:
                keyUp.setBackground(Color.lightGray);
                break;
            case 40:
                keyDown.setBackground(Color.lightGray);
                break;    
            case 37:
                keyLeft.setBackground(Color.lightGray);
                break;
            case 39:
                keyRight.setBackground(Color.lightGray);
                break;
        }
    }//GEN-LAST:event_inputFieldKeyReleased
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(keyboardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(keyboardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(keyboardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(keyboardGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new keyboardGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea inputField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton key0;
    private javax.swing.JButton key1;
    private javax.swing.JButton key2;
    private javax.swing.JButton key3;
    private javax.swing.JButton key4;
    private javax.swing.JButton key5;
    private javax.swing.JButton key6;
    private javax.swing.JButton key7;
    private javax.swing.JButton key8;
    private javax.swing.JButton key9;
    private javax.swing.JButton keyA;
    private javax.swing.JButton keyB;
    private javax.swing.JButton keyBack;
    private javax.swing.JButton keyBackSlash;
    private javax.swing.JButton keyC;
    private javax.swing.JButton keyCaps;
    private javax.swing.JButton keyColon;
    private javax.swing.JButton keyComma;
    private javax.swing.JButton keyD;
    private javax.swing.JButton keyDoubleQuote;
    private javax.swing.JButton keyDown;
    private javax.swing.JButton keyE;
    private javax.swing.JButton keyEnter;
    private javax.swing.JButton keyEqual;
    private javax.swing.JButton keyF;
    private javax.swing.JButton keyG;
    private javax.swing.JButton keyH;
    private javax.swing.JButton keyI;
    private javax.swing.JButton keyJ;
    private javax.swing.JButton keyK;
    private javax.swing.JButton keyL;
    private javax.swing.JButton keyLeft;
    private javax.swing.JButton keyLeftBracket;
    private javax.swing.JButton keyLeftShift;
    private javax.swing.JButton keyM;
    private javax.swing.JButton keyMinus;
    private javax.swing.JButton keyN;
    private javax.swing.JButton keyO;
    private javax.swing.JButton keyP;
    private javax.swing.JButton keyPeriod;
    private javax.swing.JButton keyQ;
    private javax.swing.JButton keyQuestion;
    private javax.swing.JButton keyR;
    private javax.swing.JButton keyRight;
    private javax.swing.JButton keyRightBracket;
    private javax.swing.JButton keyRightShift;
    private javax.swing.JButton keyS;
    private javax.swing.JButton keySpace;
    private javax.swing.JButton keyT;
    private javax.swing.JButton keyTab;
    private javax.swing.JButton keyTilde;
    private javax.swing.JButton keyU;
    private javax.swing.JButton keyUp;
    private javax.swing.JButton keyV;
    private javax.swing.JButton keyW;
    private javax.swing.JButton keyX;
    private javax.swing.JButton keyY;
    private javax.swing.JButton keyZ;
    // End of variables declaration//GEN-END:variables
}